name: Build and Release Binaries

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, macos]
        arch: [amd64, arm64]
        #TODO build a Mac Universal binary vs Arm/Intel
        #include:
        # Adding specific combinations for the universal macOS binary
        # - os: macos
        #   arch: universal

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x

      - name: Build Binary
        run: |
          if [ "${{ matrix.os }}" == "linux" ]; then
            GOOS=linux GOARCH=${{ matrix.arch }} go build -o ctf_serve_linux_${{ matrix.arch }}
          elif [ "${{ matrix.os }}" == "windows" ]; then
            GOOS=windows GOARCH=${{ matrix.arch }} go build -o ctf_serve_windows_${{ matrix.arch }}.exe
          elif [ "${{ matrix.os }}" == "macos" ]; then
            if [ "${{ matrix.arch }}" == "universal" ]; then
              # Build both architectures separately and combine them with lipo
              GOOS=darwin GOARCH=amd64 go build -o ctf_serve_macos_amd64
              GOOS=darwin GOARCH=arm64 go build -o ctf_serve_macos_arm64
            else
              GOOS=darwin GOARCH=${{ matrix.arch }} go build -o ctf_serve_macos_${{ matrix.arch }}
            fi
          fi

      - name: Upload Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ctf_serve_${{ matrix.os }}_${{ matrix.arch }}
          path: |
            ctf_serve_linux_*
            ctf_serve_windows_*.exe
            ctf_serve_macos_*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./binaries

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./binaries/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
